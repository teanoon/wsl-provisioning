---
- name: Install dependencies
  hosts: localhost
  tasks:
    - name: use custom apt file
      copy:
        dest: /etc/apt/sources.list
        content: |
          deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
          deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse

          deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
          deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse

          deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
          deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse

          deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
          deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse

          deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
          deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
    - name: update
      apt:
        update_cache: true
        cache_valid_time: 3600
        force_apt_get: true
        upgrade: 'yes'
    - name: install
      apt:
        package:
          - tmux
          - htop
          - zsh
          - openvpn
          - privoxy
          - trojan
          - dnsmasq
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
- name: user dev
  hosts: localhost
  tasks:
    - name: create user
      user:
        name: dev
        password: dev
        groups:
          - docker
          - sudo
        shell: /usr/bin/zsh
    - name: sudo password-less
      copy:
        dest: /etc/sudoers.d/dev
        content: |
          %dev ALL=(ALL:ALL) NOPASSWD:ALL
- name: Setup systemctl
  hosts: localhost
  tasks:
    - name: get systemctl
      become: yes
      become_user: dev
      git:
        repo: https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git
        dest: ~/.ubuntu-wsl2-systemd-script
    - name: start with systemctl
      blockinfile:
        path: /etc/zsh/zshenv
        insertafter: EOF
        content: |
          # Start or enter a PID namespace in WSL2
          if [[ $0 == -* ]]
          then
              source /usr/sbin/start-systemd-namespace
          fi
- name: zsh setup
  hosts: localhost
  remote_user: dev
  tasks:
    - name: get oh-my-zsh
      git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: ~/.ohmyzsh
    - name: install zsh-syntax-highlighting
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    - name: install zsh-completions
      git:
        repo: https://github.com/zsh-users/zsh-completions.git
        dest: ~/.oh-my-zsh/custom/plugins/zsh-completions
    - name: install zsh-autosuggestions
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
- name: docker, minikube and cuda
  hosts: localhost
  remote_user: dev
  tasks:
    - name: install minikube
      ansible.builtin.shell: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
    - name: install docker
      ansible.builtin.shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo apt-key fingerprint 0EBFCD88
        sudo add-apt-repository \
          "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) \
          stable"
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        sudo curl -L "https://github.com/docker/compose/releases/download/1.27.1/docker-compose-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    - name: install cuda
      ansible.builtin.shell: |
        distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
        curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
        curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
        sudo apt-get update
        sudo apt-get install -y nvidia-docker2
        sudo systemctl daemon-reload
        sudo systemctl restart docker
